/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.Conexion;
import Modelos.MCArticuloVenta;
import Modelos.MCProducto;
import Modelos.MCUsuario;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlos Bedoy
 */
public class Venta extends javax.swing.JFrame {

    public DefaultTableModel modeloTabla = new DefaultTableModel();
    private BusquedaInventario busquedaInventario;
    private MCUsuario usuario;
    public static Venta mthis;
    public HashMap<Integer, MCProducto> productos;
    public int contadorAVender = 0;
    public float totalAPagar = 0, totalSinIva = 0, Costo = 0, Ganancia = 0, pago, cambio;

    /**
     * Creates new form Venta
     */
    public Venta() {
        initComponents();
        this.setBounds(25, 60, this.getWidth(), this.getHeight());
        mthis = this;
        setVisible(true);
        productos = new HashMap<Integer, MCProducto>();
        this.jTable1.setModel(modeloTabla);
        this.sCambio.setEditable(true);

        modeloTabla.setColumnIdentifiers(new Object[]{"Clave", "Tipo", "Modelo", "Numero", "Cantidad", "Precio", "Precio+Iva"});
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/logosmall.png"));
        setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        sTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sPago = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sCambio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        sAtiende = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("TOTAL A PAGAR");

        sTotal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("PAGO");

        sPago.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("CAMBIO");

        sCambio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("ATIENDE");

        jButton1.setBackground(new java.awt.Color(0, 153, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("VENDER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sAtiende.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sAtiende.setText("jLabel5");

        jButton2.setBackground(new java.awt.Color(0, 153, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("AÃ‘ADIR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("ELIMINAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sAtiende))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sPago, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sAtiende))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(sTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(0, 102, 153));

        jMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("OPCIONES");

        jMenuItem1.setText("Cancelar venta");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            for (int index : this.jTable1.getSelectedRows()) {
                
                this.modeloTabla.removeRow(index);
                this.totalAPagar -= this.productos.get(index).getPrecioIva();
                this.Costo -= this.productos.get(index).getCosto();
                this.totalSinIva -= this.productos.get(index).getPrecio();
                this.productos.remove(index);
                this.sTotal.setText(String.format("%.2f ", totalAPagar));
             
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new BusquedaInventario();
        this.jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String validarPago = validarPago();
        if (validarPago.equals("OK")) {
            if (JOptionPane.showConfirmDialog(rootPane, "Â¿Seguro de realizar la venta correspondiente?") == JOptionPane.OK_OPTION) {
                crearVenta();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        try {
            BusquedaInventario.mthis.dispose();
        } catch (Exception e) {
            this.setVisible(false);
        } finally {
            this.setVisible(false);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Venta().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel sAtiende;
    private javax.swing.JTextField sCambio;
    public javax.swing.JTextField sPago;
    public javax.swing.JTextField sTotal;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the modeloTabla
     */
    public DefaultTableModel getModeloTabla() {
        return modeloTabla;
    }

    /**
     * @param modeloTabla the modeloTabla to set
     */
    public void setModeloTabla(DefaultTableModel modeloTabla) {
        this.modeloTabla = modeloTabla;
    }

    /**
     * @return the jTextField1
     */
    public javax.swing.JTextField getjTextField1() {
        return sTotal;
    }

    /**
     * @param jTextField1 the jTextField1 to set
     */
    public void setjTextField1(javax.swing.JTextField jTextField1) {
        this.sTotal = jTextField1;
    }

    public void Ligar(BusquedaInventario busquedaInventario) {
        this.busquedaInventario = busquedaInventario;
    }

    /**
     * @return the usuario
     */
    public MCUsuario getUsuario() {
        return usuario;
    }

    /**
     * @param usuario the usuario to set
     */
    public void setUsuario(MCUsuario usuario) {
        this.usuario = usuario;
        this.sAtiende.setText((this.usuario.getNombre().length() > 15)
                ? this.usuario.getNombre().substring(0, 15)
                : this.usuario.getNombre());
    }

    private String validarPago() {
        try {
            float pago = Float.parseFloat(this.sPago.getText().toString());
            if (this.sPago.getText() != null && pago >= this.totalAPagar) {
                this.sCambio.setEnabled(true);
                this.sCambio.setText(String.format("%.2f", pago - totalAPagar));
                this.sCambio.setEnabled(false);
                this.sPago.setEnabled(true);

                this.sTotal.setEnabled(false);
            } else if (pago < totalAPagar) {
                JOptionPane.showMessageDialog(this, "El pago que ingreso es menor a lo que se debe de pagar\nIntentelo otra vez");
                this.sPago.setText("");
                return "Error";

            }
            return "OK";
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, "El formato no es correcto\nIntentelo otra vez");
            this.sPago.setText("");
            return "Error";
        }

    }

    private void nuevaVenta() {

        try {
            new Conexion().getSt().execute("insert into venta "
                    + "values("
                    + "null, "
                    + "" + totalSinIva + ", "
                    + "" + totalAPagar + ", "
                    + "" + Costo + ", "
                    + "" + (this.totalAPagar - this.Costo) + " )");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void eliminaRegistros() {

        for (int i = 0; i < productos.size(); i++) {
            MCProducto producto = productos.get(i);
            try {
                new Conexion().getSt().execute(""
                        + "update caracteristicas "
                        + "set cantidad = cantidad - " + producto.getCantidad() + " "
                        + "where idCaracteristicas = " + producto.getIdCaracteristica() + " "
                        + "and "
                        + "caracteristicas.Articulo_idArticulo = " + producto.getId());
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
        BusquedaInventario.mthis.consultar();
    }

    private void setFecha() {
        SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
        try {
            int idVenta = -1;
            ResultSet rs = new Conexion().getSt().executeQuery("select MAX(idVenta) from venta");
            while (rs.next()) {
                idVenta = rs.getInt(1);
            }

            new Conexion().getSt().execute("insert into fechaventa values "
                    + "(null, "
                    + "'" + format1.format(new Date()) + "', "
                    + "" + idVenta + ")");

            for (int i = 0; i < productos.size(); i++) {
                MCProducto producto = productos.get(i);
                new Conexion().getSt().execute("insert into contenido values("
                        + "null, "
                        + "" + producto.getCantidad() + ", "
                        + "" + idVenta + ", "
                        + "" + producto.getId() + ""
                        + ")");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void crearVenta() {
        String validarPago = validarPago();
        if (validarPago.equals("OK")) {
            nuevaVenta();
            eliminaRegistros();
            setFecha();
            this.sPago.setEditable(false);
            ArrayList<MCArticuloVenta> articulos = new ArrayList<MCArticuloVenta>();
            for (int i = 0; i < modeloTabla.getRowCount(); i++) {
                MCArticuloVenta mcav = new MCArticuloVenta();
                mcav.setId(Integer.parseInt(this.jTable1.getValueAt(i, 0).toString()));
                mcav.setNombre(this.jTable1.getValueAt(i, 1).toString());
                mcav.setPrecio(Float.parseFloat(this.jTable1.getValueAt(i, 5).toString()));
                mcav.setPrecioIVA(Float.parseFloat(this.jTable1.getValueAt(i, 6).toString()));
                mcav.setCantidad(Integer.parseInt(this.jTable1.getValueAt(i, 4).toString()));
                articulos.add(mcav);
            }
            pago = Float.parseFloat(this.sPago.getText());
            int folio = 0;
            try {
                ResultSet rs = new Conexion().getSt().executeQuery("select max(idVenta) from venta");
                while (rs.next()) {
                    folio = rs.getInt(1);
                }
            } catch (Exception e) {

            }

            DecimalFormat df = new DecimalFormat("0000");

            new NotaVenta().setData(articulos, totalSinIva, totalAPagar, pago, pago - totalAPagar, this.sAtiende.getText(), df.format(folio));
            BusquedaInventario.mthis.dispose();
            setVisible(false);
        }
    }
}
